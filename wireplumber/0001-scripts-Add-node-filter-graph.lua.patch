From 2942903d0e3880d794b6a442e4d88a6516b47def Mon Sep 17 00:00:00 2001
From: Julian Bouzas <julian.bouzas@collabora.com>
Date: Mon, 13 Oct 2025 12:48:41 +0000
Subject: [PATCH 1/3] scripts: Add node/filter-graph.lua

---
 src/config/wireplumber.conf                   |  7 ++-
 .../filter-graph.conf                         | 43 +++++++++++++++
 src/scripts/node/filter-graph.lua             | 53 +++++++++++++++++++
 3 files changed, 102 insertions(+), 1 deletion(-)
 create mode 100644 src/config/wireplumber.conf.d.examples/filter-graph.conf
 create mode 100644 src/scripts/node/filter-graph.lua

diff --git a/src/config/wireplumber.conf b/src/config/wireplumber.conf
index a2368208..7620729a 100644
--- a/src/config/wireplumber.conf
+++ b/src/config/wireplumber.conf
@@ -627,12 +627,17 @@ wireplumber.components = [
     name = node/filter-forward-format.lua, type = script/lua
     provides = hooks.filter.forward-format
   }
+  {
+    name = node/filter-graph.lua, type = script/lua
+    provides = hooks.filter.graph
+  }
   {
     type = virtual, provides = policy.node
     requires = [ hooks.node.create-session-item ]
     wants = [ hooks.node.suspend
               hooks.stream.state
-              hooks.filter.forward-format ]
+              hooks.filter.forward-format
+              hooks.filter.graph ]
   }
   {
     name = node/software-dsp.lua, type = script/lua
diff --git a/src/config/wireplumber.conf.d.examples/filter-graph.conf b/src/config/wireplumber.conf.d.examples/filter-graph.conf
new file mode 100644
index 00000000..8033f65c
--- /dev/null
+++ b/src/config/wireplumber.conf.d.examples/filter-graph.conf
@@ -0,0 +1,43 @@
+node.filter-graph.rules = [
+  ## The list of filter graph rules
+
+  ## This rule example creates two filter graphs for each audio source node
+  # {
+  #   matches = [
+  #     {
+  #       ## This matches all audio source nodes
+  #       media.class = "Audio/Source"
+  #     }
+  #   ]
+  #   actions = {
+  #     create-filter-graph = [
+  #       ## Multiple filter graphs can be defined here.
+  #       ## The syntax is the same as the pipewire filter-chain conf files.
+  #
+  #       ## This is an example of a bultin passthrough filter
+  #       {
+  #         nodes = [
+  #           {
+  #             type = builtin
+  #             label = copy
+  #             name = passthrough
+  #           }
+  #         ]
+  #       }
+  #
+  #       ## This is an example of a LADSPA rnnoise filter
+  #       {
+  #         nodes = [
+  #           {
+  #             type = ladspa
+  #             name = rnnoise
+  #             plugin = librnnoise_ladspa
+  #             label = noise_suppressor_stereo
+  #           }
+  #         ]
+  #       }
+  #     ]
+  #   }
+  # }
+]
+
diff --git a/src/scripts/node/filter-graph.lua b/src/scripts/node/filter-graph.lua
new file mode 100644
index 00000000..1e105573
--- /dev/null
+++ b/src/scripts/node/filter-graph.lua
@@ -0,0 +1,53 @@
+-- WirePlumber
+--
+-- Copyright Â© 2025 The WirePlumber project contributors
+--    @author Julian Bouzas <julian.bouzas@collabora.com>
+--
+-- SPDX-License-Identifier: MIT
+
+log = Log.open_topic("s-node")
+
+config = {}
+config.rules = Conf.get_section_as_json ("node.filter-graph.rules", Json.Array{})
+
+function setNodeFilterGraphParams (node, graph_params)
+  local pod = Pod.Object {
+    "Spa:Pod:Object:Param:Props", "Props",
+    params = Pod.Struct (graph_params)
+  }
+  node:set_params("Props", pod)
+end
+
+
+SimpleEventHook {
+  name = "node/create-filter-graph",
+  interests = {
+    EventInterest {
+      Constraint { "event.type", "=", "node-added" },
+      Constraint { "library.name", "=", "audioconvert/libspa-audioconvert", type = "pw" },
+    },
+  },
+  execute = function(event)
+    local node = event:get_subject()
+
+    JsonUtils.match_rules (config.rules, node.properties, function (action, value)
+
+      if action == "create-filter-graph" then
+        local graphs = value:parse (1)
+
+	local graph_params = {}
+        for idx, val in ipairs (graphs) do
+	  local index = tonumber(idx) - 1
+	  local key = "audioconvert.filter-graph." .. tostring (index)
+
+	  log:info (node, "setting node filter graph param '" .. key .. "' to: " .. val)
+
+	  table.insert(graph_params, key)
+	  table.insert(graph_params, val)
+	end
+
+        setNodeFilterGraphParams (node, graph_params)
+      end
+    end)
+  end
+}:register()
-- 
2.51.0

